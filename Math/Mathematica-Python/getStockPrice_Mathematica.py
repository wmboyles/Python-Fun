'''
The imports and the code in the WolframCloud class
was generated by Mathematica and debugged to work
properly with Python 3. It runs an online Mathematica
script given as an ULR and returns a bytes-like
object containing the answer.

The 'main' function takes a ticker (ie AAPL or ADBE).
It receives a bytes-like object from
WolframCloud (Mathematica), converts that to a string,
removes everything bu the price, and converts the
price to a float to be returned.

What makes this program so cool is two things:
1)  Mathematica/WolframCloud does all the hard stuff,
    making the Python program short.
2)  Because Mathematica has the capibility to
    intelligently interperit inputs, you don't
    need to type in FB to get Facebook's price.
    You can type the name of the company.
        a)  The downside to this is sometimes the
            program will not give you the company
            you are looking for unless you do either
            the name or ticker.

IF THE PROGRAM BREAKS...
1) Try other tickers.
2) Make sure you are connected to the internet.
3) If 1&2 don't work
    * Go into the Mathematica file:vgetPrice.nb
    * Run the program in there.
    * Some Python code will appear.
    * One line will say: result = ulropen([URL],...).
    * Just copy the URL (in quotes) and paste it over
      the URL in thsi python file (it's in quotes too).
'''

from urllib.parse import urlencode

try: import urllib.request as urllib2
except ImportError: import urllib2

class WolframCloud:

    def wolfram_cloud_call(self, **args):
        arguments = dict([(key, arg) for key, arg in args.items()])
        result = urllib2.urlopen("http://www.wolframcloud.com/objects/dbfc6364-f692-4c42-b0a2-02e409bc1f23", urlencode(arguments).encode("utf8"))
        return result.read()

    def call(self, s):
        textresult =  self.wolfram_cloud_call(s=s)
        return textresult

def getPrice(ticker):
    p=str(WolframCloud().call(ticker))
    return float(p[p.index("[")+1:p.index(",")])

while True:
    try:print("${0}".format(getPrice(input("Name/Ticker: "))))
    except ValueError:
        print("ERROR: Likely timeout or mispelling")
        pass
    print()
